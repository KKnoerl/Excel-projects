=IFS(
  AND(
    OR(ISBLANK(#Value1#),#Value1#=0),
    OR(ISBLANK(#Value2#),#Value2#=0)),
      "",
  OR(ISBLANK(#Value1#),#Value1#=0,ISBLANK(#Value2#),#Value2#=0),
    1,
  OR(LEN(#Value1#)<>LEN(#Value2#),LEN(#Value1#)<9,LEN(#Value2#)<9),
    "LENGTH",
  MID(#Value1#,3,1)<>MID(#Value2#,3,1),
    "TYPE",
  LEFT(#Value1#,2)<>LEFT(#Value2#,2),
    "YEAR",
  TRUE,
    SUM(((CODE(MID(#Value1#,4,1))-CODE(MID(#Value2#,4,1)))*100000),(RIGHT(#Value1#,5)-RIGHT(#Value2#,5)),1))

# Explanation:
# Assume Value1 is your last serial number and Value2 is your first serial number
# Assume the serial number has the formet YYTLNNNNN, where YY is the 2 digit year, T is a character denoting the type of item, L is a numerically significant letter, and NNNNNN is 5 numerically significant numbers

=IFS(                                                                                                                   # IFS() lets us make a list of conditions and returns for each. The first true condition triggers the return
  AND(                                                                                                                  # If both
    OR(ISBLANK(#Value1#),#Value1#=0),                                                                                   # Value1 is blank or 0
    OR(ISBLANK(#Value2#),#Value2#=0)),                                                                                  # and Value2 is blank or 0
      "",                                                                                                               # return "" (an empty cell). ie. When no value is entered or 0 is entered for both.
  OR(ISBLANK(#Value1#),#Value1#=0,ISBLANK(#Value2#),#Value2#=0),                                                        # if one of Value1 or Value2 is blank or 0
    1,                                                                                                                  # return "1". ie. When only one of the values are entered, the other is blank or 0, you have 1 item
  OR(LEN(#Value1#)<>LEN(#Value2#),LEN(#Value1#)<9,LEN(#Value2#)<9),                                                     # if the length of Value1 dosen't match the length of Value2, or not the minimum length "<9"
    "LENGTH",                                                                                                           # return "LENGTH"
  MID(#Value1#,3,1)<>MID(#Value2#,3,1),                                                                                 # if the third characters of Value1 and Value2 do not match
    "TYPE",                                                                                                             # return "TYPE"
  LEFT(#Value1#,2)<>LEFT(#Value2#,2),                                                                                   # if the first two characters of Value1 and Value2 do not match
    "YEAR",                                                                                                             # return "YEAR"
  TRUE,                                                                                                                 # if everything passes
    SUM(((CODE(MID(#Value1#,4,1))-CODE(MID(#Value2#,4,1)))*100000),(RIGHT(#Value1#,5)-RIGHT(#Value2#,5)),1))            # convert the forth values into ascii to properly subtract letters, multiply by 100000 for correct placement before the last 5 numbers. 
                                                                                                                        # sum with the negative values for subtraction.
